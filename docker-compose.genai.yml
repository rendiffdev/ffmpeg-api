# Docker Compose format version is no longer required in Compose v2+
# GenAI Override for FFmpeg API with AI Enhancement Features
# Use with: docker compose -f docker-compose.yml -f docker-compose.genai.yml up -d

name: ffmpeg-api-genai

services:
  # Override API service with GenAI support
  api:
    build:
      dockerfile: docker/api/Dockerfile.genai
      platforms:
        - linux/amd64
    environment:
      GENAI_ENABLED: "true"
      GENAI_MODEL_PATH: /app/models/genai
      GENAI_GPU_ENABLED: "true"
      GENAI_GPU_DEVICE: cuda:0
      GENAI_PARALLEL_WORKERS: "2"
      GENAI_GPU_MEMORY_LIMIT: "8192"
      GENAI_INFERENCE_TIMEOUT: "300"
      GENAI_ENABLE_CACHE: "true"
      GENAI_CACHE_TTL: "86400"
      # GPU Environment
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: video,compute,utility
      CUDA_VISIBLE_DEVICES: all
      # Memory management
      PYTORCH_CUDA_ALLOC_CONF: max_split_size_mb:512
    volumes:
      - ./config:/app/config:ro
      - ./models/genai:/app/models/genai
      - storage:/storage
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 16G
        reservations:
          cpus: '2'
          memory: 8G
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    runtime: nvidia

  # Add GenAI-enabled worker service
  worker-genai:
    build:
      context: .
      dockerfile: docker/worker/Dockerfile.genai
      platforms:
        - linux/amd64
    environment:
      DATABASE_URL: postgresql://ffmpeg_user:${POSTGRES_PASSWORD}@postgres:5432/ffmpeg_api
      REDIS_URL: redis://redis:6379/0
      STORAGE_CONFIG: /app/config/storage.yml
      WORKER_TYPE: genai
      WORKER_CONCURRENCY: "2"
      LOG_LEVEL: info
      PYTHONUNBUFFERED: "1"
      # GPU Configuration
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: video,compute,utility
      CUDA_VISIBLE_DEVICES: all
      # GenAI Configuration
      GENAI_ENABLED: "true"
      GENAI_MODEL_PATH: /app/models/genai
      GENAI_GPU_ENABLED: "true"
      GENAI_GPU_DEVICE: cuda:0
      GENAI_PARALLEL_WORKERS: "2"
      WORKER_TASK_TIME_LIMIT: "43200"
      # Celery optimization for GPU tasks
      CELERY_WORKER_PREFETCH_MULTIPLIER: "1"
      CELERY_TASK_ACKS_LATE: "true"
      CELERY_WORKER_MAX_TASKS_PER_CHILD: "100"
      # Memory management
      PYTORCH_CUDA_ALLOC_CONF: max_split_size_mb:512
      CUDA_LAUNCH_BLOCKING: "0"
    volumes:
      - ./config:/app/config:ro
      - ./models/genai:/app/models/genai
      - storage:/storage
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ffmpeg-api
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "celery", "-A", "worker.main", "inspect", "ping", "-t", "10"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 180s
    deploy:
      replicas: ${GENAI_WORKERS:-1}
      resources:
        limits:
          cpus: '8'
          memory: 32G
        reservations:
          cpus: '4'
          memory: 16G
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
      restart_policy:
        condition: on-failure
        delay: 15s
        max_attempts: 3
    runtime: nvidia

  # Model downloader service (runs once to download AI models)
  model-downloader:
    build:
      context: .
      dockerfile: docker/api/Dockerfile.genai
      platforms:
        - linux/amd64
    container_name: ffmpeg_model_downloader
    command: python -m api.genai.utils.download_models
    environment:
      GENAI_MODEL_PATH: /app/models/genai
      GENAI_ESRGAN_MODEL: RealESRGAN_x4plus
      GENAI_VIDEOMAE_MODEL: MCG-NJU/videomae-base
      GENAI_VMAF_MODEL: vmaf_v0.6.1
      GENAI_DOVER_MODEL: dover_mobile
      PYTHONUNBUFFERED: "1"
      # Download configuration
      MODEL_DOWNLOAD_TIMEOUT: "3600"
      MODEL_DOWNLOAD_RETRIES: "3"
      MODEL_CACHE_ENABLED: "true"
    volumes:
      - ./models/genai:/app/models/genai
    networks:
      - ffmpeg-api
    profiles:
      - setup

# Override volumes with better configuration
volumes:
  storage:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STORAGE_PATH:-./storage}
  genai-models:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${GENAI_MODEL_PATH:-./models/genai}

# Override networks
networks:
  ffmpeg-api:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-ffmpeg-genai
    ipam:
      driver: default
      config:
        - subnet: 172.22.0.0/16
          gateway: 172.22.0.1