# Secret template - actual values should be managed via external secret operators or GitOps
apiVersion: v1
kind: Secret
metadata:
  name: ffmpeg-api-secrets
  namespace: ffmpeg-api
  labels:
    app.kubernetes.io/name: ffmpeg-api
    app.kubernetes.io/component: secrets
type: Opaque
stringData:
  # Database secrets (these should come from AWS Secrets Manager in production)
  DATABASE_URL: "postgresql://username:password@rds-endpoint:5432/ffmpeg_api"
  DATABASE_PASSWORD: "change-me-in-production"
  
  # Redis secrets
  REDIS_URL: "redis://redis-service:6379"
  REDIS_PASSWORD: ""
  
  # Storage secrets
  S3_BUCKET_NAME: "ffmpeg-api-storage"
  AWS_ACCESS_KEY_ID: "change-me"
  AWS_SECRET_ACCESS_KEY: "change-me"
  
  # Application secrets
  SECRET_KEY: "change-me-to-a-secure-random-string"
  JWT_SECRET: "change-me-to-a-secure-jwt-secret"
  
  # External service secrets
  WEBHOOK_SECRET: "change-me-webhook-secret"
---
# External Secret example for AWS Secrets Manager integration
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: aws-secrets-manager
  namespace: ffmpeg-api
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-west-2
      auth:
        jwt:
          serviceAccountRef:
            name: external-secrets-sa
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: ffmpeg-api-secrets-external
  namespace: ffmpeg-api
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: ffmpeg-api-secrets-external
    creationPolicy: Owner
  data:
  - secretKey: DATABASE_URL
    remoteRef:
      key: ffmpeg-api/prod/database
      property: url
  - secretKey: REDIS_URL
    remoteRef:
      key: ffmpeg-api/prod/redis
      property: url
  - secretKey: S3_BUCKET_NAME
    remoteRef:
      key: ffmpeg-api/prod/storage
      property: bucket_name