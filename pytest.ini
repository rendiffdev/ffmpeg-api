[tool:pytest]
# Pytest configuration for Rendiff FFmpeg API

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --cov=api
    --cov=worker
    --cov=storage
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=70
    --maxfail=10
    --durations=10

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, with external dependencies)
    e2e: End-to-end tests (slowest, full system)
    auth: Authentication related tests
    api: API endpoint tests
    worker: Worker and task tests
    storage: Storage backend tests
    database: Database related tests
    slow: Tests that take longer to run
    external: Tests requiring external services
    gpu: Tests requiring GPU resources
    admin: Admin functionality tests
    security: Security related tests

# Test filtering
filterwarnings =
    ignore::pytest.PytestUnraisableExceptionWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Async support
asyncio_mode = auto

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage options
[coverage:run]
source = api, worker, storage
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */venv/*
    */env/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod